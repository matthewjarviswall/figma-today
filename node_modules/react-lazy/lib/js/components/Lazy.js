'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactIntersectionObserver = require('@researchgate/react-intersection-observer');

var _reactIntersectionObserver2 = _interopRequireDefault(_reactIntersectionObserver);

var _wrap = require('../lib/wrap');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Lazy = function (_React$PureComponent) {
    _inherits(Lazy, _React$PureComponent);

    function Lazy(props) {
        _classCallCheck(this, Lazy);

        var _this = _possibleConstructorReturn(this, _React$PureComponent.call(this, props));

        _this.state = { show: false };

        _this.handleViewport = _this.handleViewport.bind(_this);
        return _this;
    }

    Lazy.prototype.handleViewport = function handleViewport(event, unobserve) {
        if (!event.isIntersecting || !this.props.visible) {
            return;
        }

        if (this.props.onViewport) {
            this.props.onViewport(event);
        }

        if (event.defaultPrevented) {
            return;
        }

        unobserve();

        this.setState({ show: true }, this.props.onLoad);
    };

    Lazy.prototype.render = function render() {
        var _props = this.props,
            children = _props.children,
            clientOnly = _props.clientOnly,
            component = _props.component,
            cushion = _props.cushion,
            ref = _props.forwardedRef,
            ltIE9 = _props.ltIE9,
            visible = _props.visible,
            onLoad = _props.onLoad,
            onViewport = _props.onViewport,
            threshold = _props.threshold,
            viewport = _props.viewport,
            rest = _objectWithoutProperties(_props, ['children', 'clientOnly', 'component', 'cushion', 'forwardedRef', 'ltIE9', 'visible', 'onLoad', 'onViewport', 'threshold', 'viewport']);

        var props = Object.assign({ ref: ref }, rest);
        var isClientRender = clientOnly || this.state.show;

        return _react2.default.createElement(
            _reactIntersectionObserver2.default,
            { onChange: this.handleViewport, root: viewport, rootMargin: cushion, threshold: threshold },
            _react2.default.createElement(component, isClientRender ? props : (0, _wrap.propsWithNoScriptRender)(children, ltIE9, props), isClientRender && this.state.show && visible ? children : null)
        );
    };

    return Lazy;
}(_react2.default.PureComponent);

Lazy.defaultProps = {
    clientOnly: false,
    component: 'div',
    ltIE9: false,
    visible: true
};

process.env.NODE_ENV !== "production" ? Lazy.propTypes = {
    clientOnly: _propTypes2.default.bool,
    children: _propTypes2.default.node,
    component: _propTypes2.default.any,
    cushion: _propTypes2.default.string,
    forwardedRef: _propTypes2.default.any,
    ltIE9: _propTypes2.default.bool,
    onLoad: _propTypes2.default.func,
    onViewport: _propTypes2.default.func,
    threshold: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),
    viewport: _propTypes2.default.oneOfType([_propTypes2.default.string].concat(typeof HTMLElement === 'undefined' ? [] : _propTypes2.default.instanceOf(HTMLElement))),
    visible: _propTypes2.default.bool

    // eslint-disable-next-line react/display-name,react/no-multi-comp
} : void 0;exports.default = _react2.default.forwardRef(function (props, ref) {
    return _react2.default.createElement(Lazy, Object.assign({}, props, { forwardedRef: ref }));
});